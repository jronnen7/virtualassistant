package com.goozmo.virtualassistant;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;

import android.app.Activity;
import android.util.Base64;

public class PostClient  extends Activity{

	
	public PostClient(String apiKey, String message) {

//		http.sendGet();
		
		sendPost(apiKey,);

	}
	
	// HTTP POST request
	private void sendPost(String postData) throws Exception {
		 BufferedReader in = null;
	        StringBuffer sb = new StringBuffer();
	        BufferedReader inPost = null;


	        try {
	            DefaultHttpClient httpclient = new DefaultHttpClient();


	                HttpPost httpost = new HttpPost(mURL);

	                httpost.setHeader("Accept","*/*");
	                httpost.setHeader("Content-Type", "application/x-www-form-urlencoded");

	                List <NameValuePair> nvps = new ArrayList<NameValuePair>();
	                nvps.add(new BasicNameValuePair("data_key1", "data_value1"));
	                nvps.add(new BasicNameValuePair("data_key2", "data_value2"));


	                httpost.setEntity(new UrlEncodedFormEntity(nvps, HTTP.UTF_8));

	                HttpResponse response = httpclient.execute(httpost);
	                HttpEntity entity = response.getEntity();

	                inPost = new BufferedReader(new InputStreamReader(entity.getContent()));
	                String linePost = "";
	                String NLPOST = System.getProperty("line.separator");
	                while ((linePost = inPost.readLine()) != null) {
	                    sb.append(linePost + NLPOST);
	                }
	                inPost.close();
	                if (entity != null) {
	                    entity.consumeContent();
	                }


	            httpclient.getConnectionManager().shutdown();

	}

}